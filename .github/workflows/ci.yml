name: CI (pytest in docker build + push to GHCR)

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test-in-build:
    name: Build test target (runs pytest)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test target (fails if pytest fails)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: test
          build-args: |
            TORCH_CHANNEL=cpu                      # CPU wheels on hosted runners
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push-image:
    name: Push runtime image to GHCR
    needs: test-in-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write   # needed to push to GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # This generates *lowercased* image names/tags automatically.
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=long
            type=raw,value=latest

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push runtime image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: runtime
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TORCH_CHANNEL=cpu                      # set cu124 on self-hosted GPU if needed
          cache-from: type=gha
          cache-to: type=gha,mode=max
